package com.example.springkadaitodo.service;


import org.springframework.stereotype.Service;

@Service
public class ToDoService {
    private final ToDoRepository todoRepository;

    // 依存性の注入（DI）を行う（コンストラクタインジェクション）
    public ToDoService(ToDoRepository todoRepository) {
        this.todoRepository = todoRepository;
    }

    // 新規ユーザーの登録メソッド
    public void createToDo(String todoName, String password, int roleId) {
        // ユーザー名の未入力チェック（空欄はNG）
        if (todoName == null || todoName.isEmpty()) {
            throw new IllegalArgumentException("ユーザー名を入力してください。");
        }

        // ユーザー名の重複チェック（完全一致はNG）
        if (!todoRepository.findByToDoName(todoName).isEmpty()) {
            throw new IllegalArgumentException("そのユーザー名は既に使用されています。");
        }

        // ユーザー登録用のエンティティを作成
        ToDo todo = new ToDo();
        todo.setToDoName(todoName);
        todo.setPassword(password);
        todo.setRoleId(roleId);

        // ユーザーの登録
        todoRepository.save(todo);
    }

    // ユーザーの一括取得メソッド
    public List<ToDo> getAllToDos() {
        return todoRepository.findAll();
    }
}
